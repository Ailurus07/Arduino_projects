Here is the code for Obstacle avoiding car that can avoid obstacles by throwing ultrasonic sound from ultrasonic sensor and can manage it movement using servo sensor
The materials used are :
1. 1 Arduino UNO board
2. 1 L298N Motor Driver
3. 4 DC Motors
4. 1 Ultrasonic Sensor
5. 1 Servo motor
6. jumper wires
7. a body frame of car
8. wheels
9. Batteries with battery holder
10. Glue gun
11. soldering iron
12. Arduino UNO APP

After gathering this tools and making proper connections of all above materials, the following code was added to the UNO board:

#include <Servo.h> \\ for servo libaries

#define US1 9     // This pin will send out a sound wave; it is a pin of ultrasonic sensor
#define US2 10    // This pin will listen for the sound wave to bounce back; another pin of ultrasonic sensor

// Pin definitions for the motor driver (four motors)
// motorForward: the pin that makes the motor go forward
// motorBackward: the pin that makes the motor go backward
#define motorAForward 4
#define motorABackward 5
#define motorBForward 6
#define motorBBackward 7
#define motorCForward 8
#define motorCBackward 11
#define motorDForward 12
#define motorDBackward 13

// Servo motor
Servo servo;           // Create a Servo object
#define servoPin 3     // Pin connected to the servo motor

long duration;   // How long it takes for the sound wave to bounce back
int distance;    // The distance to the obstacle in centimeters

// state: HIGH to move forward, LOW to move backward

void moveMotor(int motorForward, int motorBackward, int state) {
    digitalWrite(motorForward, state);        // Set the forward pin to the given state (HIGH or LOW)
    digitalWrite(motorBackward, !state);      // Set the backward pin to the opposite state
}

void setup() {
    // Set up the pins for the ultrasonic sensor
    pinMode(US1, OUTPUT);                 //sending a signal from this pin
    pinMode(US2, INPUT);                  //listening for a signal on this pin

    // Seting up the pins for the motors
    pinMode(motorAForward, OUTPUT);
    pinMode(motorABackward, OUTPUT);
    pinMode(motorBForward, OUTPUT);
    pinMode(motorBBackward, OUTPUT);
    pinMode(motorCForward, OUTPUT);
    pinMode(motorCBackward, OUTPUT);
    pinMode(motorDForward, OUTPUT);
    pinMode(motorDBackward, OUTPUT);

    //making sure all the motors are stopped
    digitalWrite(motorAForward, LOW);
    digitalWrite(motorABackward, LOW);
    digitalWrite(motorBForward, LOW);
    digitalWrite(motorBBackward, LOW);
    digitalWrite(motorCForward, LOW);
    digitalWrite(motorCBackward, LOW);
    digitalWrite(motorDForward, LOW);
    digitalWrite(motorDBackward, LOW);

    Serial.begin(9600);// for printing distance in computer screen

    servo.attach(servoPin);
    servo.write(90);  // Staring with the servo at 90 degrees (facing forward)
}

void loop() {
    for (int angle = 0; angle <= 180; angle += 30) {
        servo.write(angle);
        delay(500);  // Waiting for the servo to move to the position
        measureDistance();
        delay(500);  // Giving some time for stable distance reading

        // Checking if the distance is less than 20 cm (an obstacle is close)
        if (distance < 20) {
            // Stoping all the motors
            moveMotor(motorAForward, motorABackward, LOW);
            moveMotor(motorBForward, motorBBackward, LOW);
            moveMotor(motorCForward, motorCBackward, LOW);
            moveMotor(motorDForward, motorDBackward, LOW);
            delay(500);

            // Moving backward to get away from the obstacle
            moveMotor(motorAForward, motorABackward, LOW);
            moveMotor(motorBForward, motorBBackward, LOW);
            moveMotor(motorCForward, motorCBackward, LOW);
            moveMotor(motorDForward, motorDBackward, LOW);
            delay(500); 

            // Turning right to avoid the obstacle
            moveMotor(motorAForward, motorABackward, HIGH);
            moveMotor(motorBForward, motorBBackward, HIGH);
            moveMotor(motorCForward, motorCBackward, LOW);
            moveMotor(motorDForward, motorDBackward, LOW);
            delay(500);
        } else {
            // If no obstacle is close, keep moving forward
            moveMotor(motorAForward, motorABackward, HIGH);
            moveMotor(motorBForward, motorBBackward, HIGH);
            moveMotor(motorCForward, motorCBackward, HIGH);
            moveMotor(motorDForward, motorDBackward, HIGH);
        }
    }

    delay(100);
}

// Function to measure distance using the ultrasonic sensor
void measureDistance() {
    // Send out a sound wave by making the UP1 HIGH for a short time
    digitalWrite(UP1, LOW);               // Ensure the trigPin is LOW
    delayMicroseconds(2);                     // Wait for 2 microseconds
    digitalWrite(UP1, HIGH);              // Send a 10 microsecond pulse
    delayMicroseconds(10);                    // Wait for 10 microseconds
    digitalWrite(UP1, LOW);               // Stop the pulse

    // Reading the echoPin to get the duration of the echo
    duration = pulseIn(UP2, HIGH);        // it Measures the time for the echo to return

    // Calculating the distance based on the duration
    distance = duration * 0.034 / 2;          // Converting the time into a distance

    // Printing the distance to the Serial Monitor
    Serial.print("Distance: ");
    Serial.println(distance);
}
